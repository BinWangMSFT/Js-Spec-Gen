{
  "name": "Document",
  "description": "Dispatch Ids",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Visio"
    ],
    "nameSpace": "Visio",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "pages",
      "dataType": "Pages",
      "description": "Represents the Pages in the Document.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "path",
      "dataType": "String",
      "description": "Represents the path of the document.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "activePage",
      "dataType": "Page",
      "description": "Represents the active Page in the Document. ReadWrite",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "zoom",
      "dataType": "Double",
      "description": "GetSet Document's Zoom level. Readwrite Mohan: move this to page level",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "lastRefreshTime",
      "dataType": "DateTime",
      "description": "Last DateTime value of Diagram RefreshReloadOpen. Mohan: Put this in page level. Also what will be the time-zone ?. Potential misuse can happen.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "open",
      "returnType": "void",
      "description": "Open's a Document",
      "syntax": "documentObject.open(FileNameFullPath, PageIndex, FileMode);",
      "signature": "open(FileNameFullPath: string, PageIndex: number, FileMode: visFileMode)",
      "restfulName": "Open",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "FileNameFullPath",
          "dataType": "string",
          "isCollection": false,
          "description": "File Name Full Path",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "PageIndex",
          "dataType": "number",
          "isCollection": false,
          "description": "Page Index to open",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "FileMode",
          "dataType": "visFileMode",
          "isCollection": false,
          "description": "File Mode. Default = Read",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "refreshData",
      "returnType": "void",
      "description": "Refresh's the Data for the Diagram in all pages. Mohan: Park, potential blocking perf impact",
      "syntax": "documentObject.refreshData();",
      "signature": "refreshData()",
      "restfulName": "RefreshData",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "reload",
      "returnType": "void",
      "description": "Reloads the Diagram with latest version and refreshed data. Mohan: provide an optional",
      "syntax": "documentObject.reload(ShouldDataRefresh);",
      "signature": "reload(ShouldDataRefresh: bool)",
      "restfulName": "Reload",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "ShouldDataRefresh",
          "dataType": "bool",
          "isCollection": false,
          "description": "Should Data connected be refreshed. Default = false",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "clearHandlers",
      "returnType": "void",
      "description": "Removes the handlers of the document. Mohan: Remove for a single one too.",
      "syntax": "documentObject.clearHandlers();",
      "signature": "clearHandlers()",
      "restfulName": "AddHandler",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}