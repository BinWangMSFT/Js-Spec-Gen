{
  "name": "ConditionalFormat",
  "description": "Represents an Excel conditional format.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.3",
    "addinTypes": [
      "Excel"
    ],
    "nameSpace": "Excel",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "reverse",
      "dataType": "bool",
      "description": "Returns true if the conditional format does the reverse of its current settings.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "stopIfTrue",
      "dataType": "bool",
      "description": "If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "priority",
      "dataType": "int",
      "description": "The priority (or index) within the conditional format collection of the current range.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "type",
      "dataType": "string",
      "description": "The type of the conditional format. Read-Only.",
      "isReadOnly": true,
      "enumNameJs": "Excel.ConditionalFormatType",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "customOrNull",
      "dataType": "CustomConditionalFormat",
      "description": "A custom conditional format and rule.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "dataBarOrNull",
      "dataType": "ConditionalFormatDataBar",
      "description": "Represents databars with customizable color, gradient, axis, and range format options.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "iconOrNull",
      "dataType": "ConditionalFormatIcon",
      "description": "Represents a conditional format that applies icons based on criteria. The criteria can",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "colorScaleOrNull",
      "dataType": "ConditionalFormatColorScale",
      "description": "Represents a conditional format that applies a color scale on a range based on minimum, maximum, and",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "delete",
      "returnType": "void",
      "description": "Deletes this conditional format from all ranges it affects.",
      "syntax": "conditionalFormatObject.delete();",
      "signature": "delete()",
      "restfulName": "delete",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.3"
    },
    {
      "name": "deleteFromCurrentRange",
      "returnType": "void",
      "description": "Removes this conditional format from the current range. The conditional format will only be removed for the cells of the",
      "syntax": "conditionalFormatObject.deleteFromCurrentRange();",
      "signature": "deleteFromCurrentRange()",
      "restfulName": "deleteFromCurrentRange",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.3"
    },
    {
      "name": "getRangeOrNull",
      "returnType": "Range",
      "description": "Gets the entire range the conditional format affects, unless it is discontiguous, in which case it will return null.",
      "syntax": "conditionalFormatObject.getRangeOrNull();",
      "signature": "getRangeOrNull()",
      "restfulName": "RangeOrNull",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.3"
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}