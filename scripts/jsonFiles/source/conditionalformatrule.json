{
  "name": "ConditionalFormatRule",
  "description": "Represents a rule, for all traditional ruleformat pairings.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.3",
    "addinTypes": [
      "Excel"
    ],
    "nameSpace": "Excel",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "type",
      "dataType": "string",
      "description": "Tells what type of rule is being applied. If multiple exist, the first occurred is the one that is applied.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ConditionalFormatCustomRuleType",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "formula",
      "dataType": "string",
      "description": "Represents all formula-based expressions, as a string.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "between",
      "dataType": "ConditionalFormatBetweenRule",
      "description": "Represents all rules that have a between formula of items to be formatted.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "notBetween",
      "dataType": "ConditionalFormatBetweenRule",
      "description": "Represents all rules that have a not between formula of items to be formatted.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "count",
      "dataType": "ConditionalFormatCountValueRule",
      "description": "Represents the top or bottom count of items to be formatted.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "percent",
      "dataType": "ConditionalFormatPercentValueRule",
      "description": "Represents the top or bottom percentage of items to be formatted.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "average",
      "dataType": "ConditionalFormatAverageRule",
      "description": "Represents all average-based rules for conditional formatting.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "textContains",
      "dataType": "ConditionalFormatStringRule",
      "description": "Represents all text-contains or string based rules on cells.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "datesOccurring",
      "dataType": "string",
      "description": "Takes a date-like enumeration to format cells based on.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ConditionalFormatDate",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "numberRule",
      "dataType": "ConditionalFormatNumericalRule",
      "description": "Represents a numerical comparison rule type.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "blank",
      "dataType": "bool",
      "description": "If true, formats blank cells. If false, formats not blank cells.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "unique",
      "dataType": "bool",
      "description": "If true, formats unique cells. If false, formats duplicate cells.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "error",
      "dataType": "bool",
      "description": "If true, formats cells with errors. If false, formats cells without errors.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}