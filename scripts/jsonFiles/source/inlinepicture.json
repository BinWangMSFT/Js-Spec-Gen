{
  "name": "InlinePicture",
  "description": "Represents an inline picture.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Visio"
    ],
    "nameSpace": "Visio",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "altTextDescription",
      "dataType": "string",
      "description": "Gets or sets a string that represents the alternative text associated with the inline image",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "altTextTitle",
      "dataType": "string",
      "description": "Gets or sets a string that contains the title for the inline image.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "height",
      "dataType": "float",
      "description": "Gets or sets a number that describes the height of the inline image.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "hyperlink",
      "dataType": "string",
      "description": "Gets or sets a hyperlink on the image. Use a newline character ('\\n') to separate the address part from the optional location part.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "lockAspectRatio",
      "dataType": "bool",
      "description": "Gets or sets a value that indicates whether the inline image retains its original proportions when you resize it.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "width",
      "dataType": "float",
      "description": "Gets or sets a number that describes the width of the inline image.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentContentControl",
      "dataType": "ContentControl",
      "description": "Gets the content control that contains the inline image. Returns a null object if there isn't a parent content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "paragraph",
      "dataType": "Paragraph",
      "description": "Gets the parent paragraph that contains the inline image.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.2",
      "isKey": null,
      "notes": null
    },
    {
      "name": "imageFormat",
      "dataType": "ImageFormat",
      "description": "Gets the format of the inline image.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.4",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentTableCell",
      "dataType": "TableCell",
      "description": "Gets the table cell that contains the inline image. Returns a null object if it is not contained in a table cell.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentTable",
      "dataType": "Table",
      "description": "Gets the table that contains the inline image. Returns a null object if it is not contained in a table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "getBase64ImageSrc",
      "returnType": "string",
      "description": "Gets the base64 encoded string representation of the inline image.",
      "syntax": "inlinePictureObject.getBase64ImageSrc();",
      "signature": "getBase64ImageSrc()",
      "restfulName": "Base64ImageSrc",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "insertContentControl",
      "returnType": "ContentControl",
      "description": "Wraps the inline picture with a rich text content control.",
      "syntax": "inlinePictureObject.insertContentControl();",
      "signature": "insertContentControl()",
      "restfulName": "insertContentControl",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "insertInlinePictureFromBase64",
      "returnType": "InlinePicture",
      "description": "Inserts an inline picture at the specified location. The insertLocation value can be 'Replace', 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertInlinePictureFromBase64(base64EncodedImage, insertLocation);",
      "signature": "insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: InsertLocation)",
      "restfulName": "insertInlinePictureFromBase64",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "base64EncodedImage",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The base64 encoded image to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "insertBreak",
      "returnType": "void",
      "description": "Inserts a break at the specified location in the main document. The insertLocation value can be 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertBreak(breakType, insertLocation);",
      "signature": "insertBreak(breakType: BreakType, insertLocation: InsertLocation)",
      "restfulName": "insertBreak",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "breakType",
          "dataType": "BreakType",
          "isCollection": false,
          "description": "Required. The break type to add.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "insertText",
      "returnType": "Range",
      "description": "Inserts text at the specified location. The insertLocation value can be 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertText(text, insertLocation);",
      "signature": "insertText(text: string, insertLocation: InsertLocation)",
      "restfulName": "insertText",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "text",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. Text to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "insertHtml",
      "returnType": "Range",
      "description": "Inserts HTML at the specified location. The insertLocation value can be 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertHtml(html, insertLocation);",
      "signature": "insertHtml(html: string, insertLocation: InsertLocation)",
      "restfulName": "insertHtml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "html",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The HTML to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "insertOoxml",
      "returnType": "Range",
      "description": "Inserts OOXML at the specified location.  The insertLocation value can be 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertOoxml(ooxml, insertLocation);",
      "signature": "insertOoxml(ooxml: string, insertLocation: InsertLocation)",
      "restfulName": "insertOoxml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "ooxml",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The OOXML to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "insertFileFromBase64",
      "returnType": "Range",
      "description": "Inserts a document at the specified location. The insertLocation value can be 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertFileFromBase64(base64File, insertLocation);",
      "signature": "insertFileFromBase64(base64File: string, insertLocation: InsertLocation)",
      "restfulName": "insertFileFromBase64",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "base64File",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The base64 encoded content of a .docx file.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "insertParagraph",
      "returnType": "Paragraph",
      "description": "Inserts a paragraph at the specified location. The insertLocation value can be 'Before' or 'After'.",
      "syntax": "inlinePictureObject.insertParagraph(paragraphText, insertLocation);",
      "signature": "insertParagraph(paragraphText: string, insertLocation: InsertLocation)",
      "restfulName": "insertParagraph",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "paragraphText",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The paragraph text to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "InsertLocation",
          "isCollection": false,
          "description": "Required. The value can be 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "delete",
      "returnType": "void",
      "description": "Deletes the inline picture from the document.",
      "syntax": "inlinePictureObject.delete();",
      "signature": "delete()",
      "restfulName": "delete",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.2"
    },
    {
      "name": "select",
      "returnType": "void",
      "description": "Selects the inline picture. This causes Word to scroll to the selection.",
      "syntax": "inlinePictureObject.select(selectionMode);",
      "signature": "select(selectionMode: SelectionMode)",
      "restfulName": "select",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "selectionMode",
          "dataType": "SelectionMode",
          "isCollection": false,
          "description": "Optional. The selection mode can be 'Select', 'Start' or 'End'. 'Select' is the default.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "getRange",
      "returnType": "Range",
      "description": "Gets the picture, or the starting or ending point of the picture, as a range.",
      "syntax": "inlinePictureObject.getRange(rangeLocation);",
      "signature": "getRange(rangeLocation: RangeLocation)",
      "restfulName": "Range",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "rangeLocation",
          "dataType": "RangeLocation",
          "isCollection": false,
          "description": "Optional. The range location can be 'Whole', 'Start' or 'End'.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "getNext",
      "returnType": "InlinePicture",
      "description": "Gets the next inline image.",
      "syntax": "inlinePictureObject.getNext();",
      "signature": "getNext()",
      "restfulName": "Next",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.3"
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}