{
  "name": "ContentControl",
  "description": "Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Word"
    ],
    "nameSpace": "Word",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "id",
      "dataType": "uint",
      "description": "Gets an integer that represents the content control identifier.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "title",
      "dataType": "string",
      "description": "Gets or sets the title for a content control.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "tag",
      "dataType": "string",
      "description": "Gets or sets a tag to identify a content control.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "placeholderText",
      "dataType": "string",
      "description": "Gets or sets the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "type",
      "dataType": "string",
      "description": "Gets the content control type. Only rich text content controls are supported currently.",
      "isReadOnly": true,
      "enumNameJs": "Word.ContentControlType",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "subtype",
      "dataType": "string",
      "description": "Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls.",
      "isReadOnly": true,
      "enumNameJs": "Word.ContentControlType",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "appearance",
      "dataType": "string",
      "description": "Gets or sets the appearance of the content control. The value can be 'boundingBox', 'tags' or 'hidden'.",
      "isReadOnly": false,
      "enumNameJs": "Word.ContentControlAppearance",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "color",
      "dataType": "string",
      "description": "Gets or sets the color of the content control. Color is specified in '#RRGGBB' format or by using the color name.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "removeWhenEdited",
      "dataType": "bool",
      "description": "Gets or sets a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "cannotDelete",
      "dataType": "bool",
      "description": "Gets or sets a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "cannotEdit",
      "dataType": "bool",
      "description": "Gets or sets a value that indicates whether the user can edit the contents of the content control.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "font",
      "dataType": "Font",
      "description": "Gets the text format of the content control. Use this to get and set font name, size, color, and other properties.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "style",
      "dataType": "string",
      "description": "Gets or sets the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "styleBuiltIn",
      "dataType": "string",
      "description": "Gets or sets the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the \"style\" property.",
      "isReadOnly": false,
      "enumNameJs": "Word.Style",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "paragraphs",
      "dataType": "ParagraphCollection",
      "description": "Get the collection of paragraph objects in the content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "contentControls",
      "dataType": "ContentControlCollection",
      "description": "Gets the collection of content control objects in the content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentContentControl",
      "dataType": "ContentControl",
      "description": "Gets the content control that contains the content control. Throws if there isn't a parent content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentContentControlOrNullObject",
      "dataType": "ContentControl",
      "description": "Gets the content control that contains the content control. Returns a null object if there isn't a parent content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "inlinePictures",
      "dataType": "InlinePictureCollection",
      "description": "Gets the collection of inlinePicture objects in the content control. The collection does not include floating images.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "text",
      "dataType": "string",
      "description": "Gets the text of the content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "lists",
      "dataType": "ListCollection",
      "description": "Gets the collection of list objects in the content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "tables",
      "dataType": "TableCollection",
      "description": "Gets the collection of table objects in the content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentTableCell",
      "dataType": "TableCell",
      "description": "Gets the table cell that contains the content control. Throws if it is not contained in a table cell.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentTableCellOrNullObject",
      "dataType": "TableCell",
      "description": "Gets the table cell that contains the content control. Returns a null object if it is not contained in a table cell.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentTable",
      "dataType": "Table",
      "description": "Gets the table that contains the content control. Throws if it is not contained in a table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentTableOrNullObject",
      "dataType": "Table",
      "description": "Gets the table that contains the content control. Returns a null object if it is not contained in a table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentBody",
      "dataType": "Body",
      "description": "Gets the parent body of the content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "insertText",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts text into the content control at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "contentControlObject.insertText(text, insertLocation);",
      "signature": "insertText(text: string, insertLocation: string)",
      "restfulName": "insertText",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "text",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The text to be inserted in to the content control.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertHtml",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts HTML into the content control at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "contentControlObject.insertHtml(html, insertLocation);",
      "signature": "insertHtml(html: string, insertLocation: string)",
      "restfulName": "insertHtml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "html",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The HTML to be inserted in to the content control.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertOoxml",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts OOXML into the content control at the specified location.  The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "contentControlObject.insertOoxml(ooxml, insertLocation);",
      "signature": "insertOoxml(ooxml: string, insertLocation: string)",
      "restfulName": "insertOoxml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "ooxml",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The OOXML to be inserted in to the content control.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertFileFromBase64",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts a document into the content control at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "contentControlObject.insertFileFromBase64(base64File, insertLocation);",
      "signature": "insertFileFromBase64(base64File: string, insertLocation: string)",
      "restfulName": "insertFileFromBase64",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "base64File",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The base64 encoded content of a .docx file.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertParagraph",
      "returnType": "Paragraph",
      "enumNameJs": null,
      "description": "Inserts a paragraph at the specified location. The insertLocation value can be 'Start', 'End', 'Before' or 'After'.",
      "syntax": "contentControlObject.insertParagraph(paragraphText, insertLocation);",
      "signature": "insertParagraph(paragraphText: string, insertLocation: string)",
      "restfulName": "insertParagraph",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "paragraphText",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The paragrph text to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start', 'End', 'Before' or 'After'. 'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertBreak",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Inserts a break at the specified location in the main document. The insertLocation value can be 'Start', 'End', 'Before' or 'After'. This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.",
      "syntax": "contentControlObject.insertBreak(breakType, insertLocation);",
      "signature": "insertBreak(breakType: string, insertLocation: string)",
      "restfulName": "insertBreak",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "breakType",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. Type of break.",
          "isRequired": true,
          "enumNameJs": "Word.BreakType",
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start', 'End', 'Before' or 'After'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertInlinePictureFromBase64",
      "returnType": "InlinePicture",
      "enumNameJs": null,
      "description": "Inserts an inline picture into the content control at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "contentControlObject.insertInlinePictureFromBase64(base64EncodedImage, insertLocation);",
      "signature": "insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: string)",
      "restfulName": "insertInlinePictureFromBase64",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "base64EncodedImage",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The base64 encoded image to be inserted in the content control.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'. 'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "clear",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Clears the contents of the content control. The user can perform the undo operation on the cleared content.",
      "syntax": "contentControlObject.clear();",
      "signature": "clear()",
      "restfulName": "clear",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "delete",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Deletes the content control and its content. If keepContent is set to true, the content is not deleted.",
      "syntax": "contentControlObject.delete(keepContent);",
      "signature": "delete(keepContent: bool)",
      "restfulName": "delete",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "keepContent",
          "dataType": "bool",
          "isCollection": false,
          "description": "Required. Indicates whether the content should be deleted with the content control. If keepContent is set to true, the content is not deleted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "select",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Selects the content control. This causes Word to scroll to the selection.",
      "syntax": "contentControlObject.select(selectionMode);",
      "signature": "select(selectionMode: string)",
      "restfulName": "select",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "selectionMode",
          "dataType": "string",
          "isCollection": false,
          "description": "Optional. The selection mode can be 'Select', 'Start' or 'End'. 'Select' is the default.",
          "isRequired": false,
          "enumNameJs": "Word.SelectionMode",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "getHtml",
      "returnType": "string",
      "enumNameJs": null,
      "description": "Gets the HTML representation of the content control object.",
      "syntax": "contentControlObject.getHtml();",
      "signature": "getHtml()",
      "restfulName": "Html",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "getOoxml",
      "returnType": "string",
      "enumNameJs": null,
      "description": "Gets the Office Open XML (OOXML) representation of the content control object.",
      "syntax": "contentControlObject.getOoxml();",
      "signature": "getOoxml()",
      "restfulName": "Ooxml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "search",
      "returnType": "RangeCollection",
      "enumNameJs": null,
      "description": "Performs a search with the specified searchOptions on the scope of the content control object. The search results are a collection of range objects.",
      "syntax": "contentControlObject.search(searchText, searchOptions);",
      "signature": "search(searchText: string, searchOptions: ParamTypeStrings.SearchOptions)",
      "restfulName": "search",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "searchText",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The search text.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "searchOptions",
          "dataType": "ParamTypeStrings.SearchOptions",
          "isCollection": false,
          "description": "Optional. Options for the search.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "getRange",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Gets the whole content control, or the starting or ending point of the content control, as a range.",
      "syntax": "contentControlObject.getRange(rangeLocation);",
      "signature": "getRange(rangeLocation: string)",
      "restfulName": "Range",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "rangeLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Optional. The range location can be 'Whole', 'Before', 'Start', 'End', 'After' or 'Content'.",
          "isRequired": false,
          "enumNameJs": "Word.RangeLocation",
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "split",
      "returnType": "RangeCollection",
      "enumNameJs": null,
      "description": "Splits the content control into child ranges by using delimiters.",
      "syntax": "contentControlObject.split(delimiters, multiParagraphs, trimDelimiters, trimSpacing);",
      "signature": "split(delimiters: string[], multiParagraphs: bool, trimDelimiters: bool, trimSpacing: bool)",
      "restfulName": "split",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "delimiters",
          "dataType": "string[]",
          "isCollection": true,
          "description": "Required. The delimiters as an array of strings.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "multiParagraphs",
          "dataType": "bool",
          "isCollection": false,
          "description": "Optional. Indicates whether a returned child range can cover multiple paragraphs. Default is false which indicates that the paragraph boundaries are also used as delimiters.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "trimDelimiters",
          "dataType": "bool",
          "isCollection": false,
          "description": "Optional. Indicates whether to trim delimiters from the ranges in the range collection. Default is false which indicates that the delimiters are included in the ranges returned in the range collection.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "trimSpacing",
          "dataType": "bool",
          "isCollection": false,
          "description": "Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "insertTable",
      "returnType": "Table",
      "enumNameJs": null,
      "description": "Inserts a table with the specified number of rows and columns into, or next to, a content control. The insertLocation value can be 'Start', 'End', 'Before' or 'After'.",
      "syntax": "contentControlObject.insertTable(rowCount, columnCount, insertLocation, values);",
      "signature": "insertTable(rowCount: number, columnCount: number, insertLocation: string, values: string[][])",
      "restfulName": "insertTable",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "rowCount",
          "dataType": "number",
          "isCollection": false,
          "description": "Required. The number of rows in the table.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "columnCount",
          "dataType": "number",
          "isCollection": false,
          "description": "Required. The number of columns in the table.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start', 'End', 'Before' or 'After'. 'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        },
        {
          "name": "values",
          "dataType": "string[][]",
          "isCollection": true,
          "description": "Optional 2D array. Cells are filled if the corresponding strings are specified in the array.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "getTextRanges",
      "returnType": "RangeCollection",
      "enumNameJs": null,
      "description": "Gets the text ranges in the content control by using punctuation marks andor other ending marks.",
      "syntax": "contentControlObject.getTextRanges(endingMarks, trimSpacing);",
      "signature": "getTextRanges(endingMarks: string[], trimSpacing: bool)",
      "restfulName": "TextRanges",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "endingMarks",
          "dataType": "string[]",
          "isCollection": true,
          "description": "Required. The punctuation marks and/or other ending marks as an array of strings.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "trimSpacing",
          "dataType": "bool",
          "isCollection": false,
          "description": "Optional. Indicates whether to trim spacing characters (spaces, tabs, column breaks and paragraph end marks) from the start and end of the ranges returned in the range collection. Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}