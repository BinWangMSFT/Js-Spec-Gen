{
  "name": "Body",
  "description": "Represents the body of a document or a section.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Word"
    ],
    "nameSpace": "Word",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "paragraphs",
      "dataType": "ParagraphCollection",
      "description": "Gets the collection of paragraph objects in the body.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "contentControls",
      "dataType": "ContentControlCollection",
      "description": "Gets the collection of rich text content control objects in the body.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentContentControl",
      "dataType": "ContentControl",
      "description": "Gets the content control that contains the body. Throws if there isn't a parent content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentContentControlOrNullObject",
      "dataType": "ContentControl",
      "description": "Gets the content control that contains the body. Returns a null object if there isn't a parent content control.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "font",
      "dataType": "Font",
      "description": "Gets the text format of the body. Use this to get and set font name, size, color and other properties.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "style",
      "dataType": "string",
      "description": "Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "styleBuiltIn",
      "dataType": "string",
      "description": "Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the \"style\" property.",
      "isReadOnly": false,
      "enumNameJs": "Word.Style",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "inlinePictures",
      "dataType": "InlinePictureCollection",
      "description": "Gets the collection of inlinePicture objects in the body. The collection does not include floating images.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "text",
      "dataType": "string",
      "description": "Gets the text of the body. Use the insertText method to insert text.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "type",
      "dataType": "string",
      "description": "Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'.",
      "isReadOnly": true,
      "enumNameJs": "Word.BodyType",
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentBody",
      "dataType": "Body",
      "description": "Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentBodyOrNullObject",
      "dataType": "Body",
      "description": "Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "lists",
      "dataType": "ListCollection",
      "description": "Gets the collection of list objects in the body.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "tables",
      "dataType": "TableCollection",
      "description": "Gets the collection of table objects in the body.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentSection",
      "dataType": "Section",
      "description": "Gets the parent section of the body. Throws if there isn't a parent section.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "parentSectionOrNullObject",
      "dataType": "Section",
      "description": "Gets the parent section of the body. Returns a null object if there isn't a parent section.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "insertText",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts text into the body at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "bodyObject.insertText(text, insertLocation);",
      "signature": "insertText(text: string, insertLocation: string)",
      "restfulName": "insertText",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "text",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. Text to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertHtml",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts HTML at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "bodyObject.insertHtml(html, insertLocation);",
      "signature": "insertHtml(html: string, insertLocation: string)",
      "restfulName": "insertHtml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "html",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The HTML to be inserted in the document.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertOoxml",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts OOXML at the specified location.  The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "bodyObject.insertOoxml(ooxml, insertLocation);",
      "signature": "insertOoxml(ooxml: string, insertLocation: string)",
      "restfulName": "insertOoxml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "ooxml",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The OOXML to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertParagraph",
      "returnType": "Paragraph",
      "enumNameJs": null,
      "description": "Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.",
      "syntax": "bodyObject.insertParagraph(paragraphText, insertLocation);",
      "signature": "insertParagraph(paragraphText: string, insertLocation: string)",
      "restfulName": "insertParagraph",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "paragraphText",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The paragraph text to be inserted.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertFileFromBase64",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Inserts a document into the body at the specified location. The insertLocation value can be 'Replace', 'Start' or 'End'.",
      "syntax": "bodyObject.insertFileFromBase64(base64File, insertLocation);",
      "signature": "insertFileFromBase64(base64File: string, insertLocation: string)",
      "restfulName": "insertFileFromBase64",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "base64File",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The base64 encoded content of a .docx file.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Replace', 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertBreak",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.",
      "syntax": "bodyObject.insertBreak(breakType, insertLocation);",
      "signature": "insertBreak(breakType: string, insertLocation: string)",
      "restfulName": "insertBreak",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "breakType",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The break type to add to the body.",
          "isRequired": true,
          "enumNameJs": "Word.BreakType",
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "insertContentControl",
      "returnType": "ContentControl",
      "enumNameJs": null,
      "description": "Wraps the body object with a Rich Text content control.",
      "syntax": "bodyObject.insertContentControl();",
      "signature": "insertContentControl()",
      "restfulName": "insertContentControl",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "insertInlinePictureFromBase64",
      "returnType": "InlinePicture",
      "enumNameJs": null,
      "description": "Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.",
      "syntax": "bodyObject.insertInlinePictureFromBase64(base64EncodedImage, insertLocation);",
      "signature": "insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: string)",
      "restfulName": "insertInlinePictureFromBase64",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "base64EncodedImage",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The base64 encoded image to be inserted in the body.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "clear",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Clears the contents of the body object. The user can perform the undo operation on the cleared content.",
      "syntax": "bodyObject.clear();",
      "signature": "clear()",
      "restfulName": "clear",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "select",
      "returnType": "void",
      "enumNameJs": null,
      "description": "Selects the body and navigates the Word UI to it.",
      "syntax": "bodyObject.select(selectionMode);",
      "signature": "select(selectionMode: string)",
      "restfulName": "select",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "selectionMode",
          "dataType": "string",
          "isCollection": false,
          "description": "Optional. The selection mode can be 'Select', 'Start' or 'End'. 'Select' is the default.",
          "isRequired": false,
          "enumNameJs": "Word.SelectionMode",
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "search",
      "returnType": "RangeCollection",
      "enumNameJs": null,
      "description": "Performs a search with the specified searchOptions on the scope of the body object. The search results are a collection of range objects.",
      "syntax": "bodyObject.search(searchText, searchOptions);",
      "signature": "search(searchText: string, searchOptions: ParamTypeStrings.SearchOptions)",
      "restfulName": "search",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "searchText",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The search text.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "searchOptions",
          "dataType": "ParamTypeStrings.SearchOptions",
          "isCollection": false,
          "description": "Optional. Options for the search.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "getHtml",
      "returnType": "string",
      "enumNameJs": null,
      "description": "Gets the HTML representation of the body object.",
      "syntax": "bodyObject.getHtml();",
      "signature": "getHtml()",
      "restfulName": "Html",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "getOoxml",
      "returnType": "string",
      "enumNameJs": null,
      "description": "Gets the OOXML (Office Open XML) representation of the body object.",
      "syntax": "bodyObject.getOoxml();",
      "signature": "getOoxml()",
      "restfulName": "Ooxml",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "getRange",
      "returnType": "Range",
      "enumNameJs": null,
      "description": "Gets the whole body, or the starting or ending point of the body, as a range.",
      "syntax": "bodyObject.getRange(rangeLocation);",
      "signature": "getRange(rangeLocation: string)",
      "restfulName": "Range",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "rangeLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Optional. The range location can be 'Whole', 'Start', 'End', 'After' or 'Content'.",
          "isRequired": false,
          "enumNameJs": "Word.RangeLocation",
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "insertTable",
      "returnType": "Table",
      "enumNameJs": null,
      "description": "Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.",
      "syntax": "bodyObject.insertTable(rowCount, columnCount, insertLocation, values);",
      "signature": "insertTable(rowCount: number, columnCount: number, insertLocation: string, values: string[][])",
      "restfulName": "insertTable",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "rowCount",
          "dataType": "number",
          "isCollection": false,
          "description": "Required. The number of rows in the table.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "columnCount",
          "dataType": "number",
          "isCollection": false,
          "description": "Required. The number of columns in the table.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "Required. The value can be 'Start' or 'End'.",
          "isRequired": true,
          "enumNameJs": "Word.InsertLocation",
          "notes": null
        },
        {
          "name": "values",
          "dataType": "string[][]",
          "isCollection": true,
          "description": "Optional 2D array. Cells are filled if the corresponding strings are specified in the array.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.3"
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}