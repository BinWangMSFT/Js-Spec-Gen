{
  "name": "Shapes",
  "description": "Dispatch Ids",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Visio"
    ],
    "nameSpace": "Visio",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "count",
      "dataType": "int",
      "description": "Represents the no. of shapes.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "getItem",
      "returnType": "Shape",
      "description": "Gets a Shape using its name or ID.",
      "syntax": "shapesObject.getItem(NameOrIndex);",
      "signature": "getItem(NameOrIndex: number or string)",
      "restfulName": "Item",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "NameOrIndex",
          "dataType": "number or string",
          "isCollection": false,
          "description": "Name or Index of the page to be retrieved.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "item",
      "returnType": "Shape",
      "description": "Retrieves the Shape by Name Or Index. Mohan: can we just have over Index.",
      "syntax": "shapesObject.item(NameOrIndex);",
      "signature": "item(NameOrIndex: number or string)",
      "restfulName": "Item",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "NameOrIndex",
          "dataType": "number or string",
          "isCollection": false,
          "description": "Name or Index",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "itemU",
      "returnType": "Shape",
      "description": "Retrieves the Shape by Name (Locale Independent) Or Index",
      "syntax": "shapesObject.itemU(NameOrIndex);",
      "signature": "itemU(NameOrIndex: number or string)",
      "restfulName": "ItemU",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "NameOrIndex",
          "dataType": "number or string",
          "isCollection": false,
          "description": "Name or Index",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "itemFromID",
      "returnType": "Shape",
      "description": "Retrieves the Shape by ID.",
      "syntax": "shapesObject.itemFromID(ObjectID);",
      "signature": "itemFromID(ObjectID: long)",
      "restfulName": "ItemFromID",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "ObjectID",
          "dataType": "long",
          "isCollection": false,
          "description": "ID",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ],
      "reqSet": "1.1"
    }
  ]
}